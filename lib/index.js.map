{"version":3,"sources":["../src/index.js"],"names":["Monitor","hasPerformance","window","performance","dateUtil","Date","marks","runing","title","push","time","now","console","log","timing","domainLookupEnd","domainLookupStart","connectEnd","connectStart","responseEnd","responseStart","domComplete","domInteractive","navigationStart","domContentLoadedEventEnd","loadEventEnd","length","times","map","mark","i","join","jsmonitor"],"mappings":";;;;;;;;;;;;;;;;IAAMA,O;;;SACJC,c,GAAiB,CAAC,CAACC,OAAOC,W;SAC1BC,Q,GAAW,KAAKH,cAAL,GAAsBC,OAAOC,WAA7B,GAA2CE,I;SACtDC,K,GAAQ,E;SACRC,M,GAAS,I;;;;;yBAmCJC,K,EAAO;AACV,UAAI,CAAC,KAAKD,MAAV,EAAkB;AAChB;AACD;AACD,WAAKD,KAAL,CAAWG,IAAX,CAAgB;AACdD,oBADc;AAEdE,cAAM,KAAKN,QAAL,CAAcO,GAAd;AAFQ,OAAhB;AAID;;;gCAEW;AACV,WAAKL,KAAL,GAAa,EAAb;AACD;;;4BAEO;AACN,WAAKC,MAAL,GAAc,IAAd;AACD;;;2BAEM;AACL,WAAKA,MAAL,GAAc,KAAd;AACD;;;;;AArDD;wBACW;AACT,UAAI,CAAC,KAAKN,cAAV,EAA0B;AACxBW,gBAAQC,GAAR,CAAY,qBAAZ;AACA;AACD;AAJQ,kCAKkLX,OAAOC,WAAP,CAAmBW,MALrM;AAAA,UAKDC,eALC,yBAKDA,eALC;AAAA,UAKgBC,iBALhB,yBAKgBA,iBALhB;AAAA,UAKmCC,UALnC,yBAKmCA,UALnC;AAAA,UAK+CC,YAL/C,yBAK+CA,YAL/C;AAAA,UAK6DC,WAL7D,yBAK6DA,WAL7D;AAAA,UAK0EC,aAL1E,yBAK0EA,aAL1E;AAAA,UAKyFC,WALzF,yBAKyFA,WALzF;AAAA,UAKsGC,cALtG,yBAKsGA,cALtG;AAAA,UAKsHC,eALtH,yBAKsHA,eALtH;AAAA,UAKuIC,wBALvI,yBAKuIA,wBALvI;AAAA,UAKiKC,YALjK,yBAKiKA,YALjK;;;AAOT,6DACaV,kBAAkBC,iBAD/B,oDAEaC,aAAaC,YAF1B,wDAGiBC,cAAcC,aAH/B,6CAIgBI,2BAA2BD,eAJ3C,0DAKcF,cAAcC,cAL5B,iDAMUF,gBAAgBG,eAN1B,2CAOcE,eAAeF,eAP7B;AASD;;;wBAEY;AAAA;;AACX,UAAI,KAAKjB,KAAL,CAAWoB,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,eAAO,QAAP;AACD;AACD,UAAMC,QAAQ,KAAKrB,KAAL,CAAWsB,GAAX,CAAe,UAACC,IAAD,EAAOC,CAAP,EAAa;AACxC,YAAIA,KAAK,CAAT,EAAY;AACV,sBAAUD,KAAKrB,KAAf;AACD,SAFD,MAEO;AACL,yBAAYqB,KAAKnB,IAAL,GAAY,MAAKJ,KAAL,CAAWwB,IAAI,CAAf,EAAkBpB,IAA1C,YAAoDmB,KAAKrB,KAAzD;AACD;AACF,OANa,CAAd;AAOA,aAAOmB,MAAMI,IAAN,CAAW,EAAX,CAAP;AACD;;;;;AAyBH,IAAMC,YAAY,IAAIhC,OAAJ,EAAlB;AACAE,OAAO8B,SAAP,GAAmBA,SAAnB;kBACeA,S","file":"index.js","sourcesContent":["class Monitor{\n  hasPerformance = !!window.performance;\n  dateUtil = this.hasPerformance ? window.performance : Date;\n  marks = [];\n  runing = true;\n\n  // 加载信息\n  get time() {\n    if (!this.hasPerformance) {\n      console.log('您的浏览器不支持performance');\n      return\n    }\n    const { domainLookupEnd, domainLookupStart, connectEnd, connectStart, responseEnd, responseStart, domComplete, domInteractive, navigationStart, domContentLoadedEventEnd, loadEventEnd } = window.performance.timing;\n\n    return `\n      DNS查询耗时 ：${domainLookupEnd - domainLookupStart}\n      TCP链接耗时 ：${connectEnd - connectStart}\n      request请求耗时 ：${responseEnd - responseStart}\n      domready时间 ：${domContentLoadedEventEnd - navigationStart}\n      解析dom树耗时 ：${domComplete - domInteractive}\n      白屏时间 ：${responseStart - navigationStart}\n      onload时间 ：${loadEventEnd - navigationStart}\n    `\n  }\n\n  get output() {\n    if (this.marks.length <= 0) {\n      return '没有监控记录'\n    }\n    const times = this.marks.map((mark, i) => {\n      if (i == 0) {\n        return `${mark.title}`\n      } else {\n        return `__${mark.time - this.marks[i - 1].time}__>${mark.title}`\n      }\n    });\n    return times.join('');\n  }\n\n  mark(title) {\n    if (!this.runing) {\n      return\n    }\n    this.marks.push({\n      title,\n      time: this.dateUtil.now()\n    });\n  }\n\n  clearMark() {\n    this.marks = [];\n  }\n\n  start() {\n    this.runing = true;\n  }\n\n  stop() {\n    this.runing = false;\n  }\n}\n\nconst jsmonitor = new Monitor();\nwindow.jsmonitor = jsmonitor;\nexport default jsmonitor;"]}